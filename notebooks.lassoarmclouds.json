{"version":2,"kind":"Notebook","sha256":"c26870aa9867480b0e96ec60bb80ef48f729e52d68ec656a3c5b41f617af9a68","slug":"notebooks.lassoarmclouds","location":"/notebooks/LassoARMClouds.ipynb","dependencies":[],"frontmatter":{"title":"Simulation vs Observational Data of Shallow Cumulus Clouds over the Southern Great Plains on April 4th, 2019","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Project Pythia Community","given":"Project Pythia","family":"Community"},"name":"Project Pythia Community","url":"https://projectpythia.org/","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true},"code":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true}},"github":"https://github.com/projectpythia/lasso-those-clouds-cookbook","copyright":"2024","numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/lasso-those-clouds-cookbook/blob/main/notebooks/LassoARMClouds.ipynb","exports":[{"format":"ipynb","filename":"LassoARMClouds.ipynb","url":"/lasso-those-clouds-cookbook/build/LassoARMClouds-0855dbdb45be0f8a070becfcf6f271e3.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Import","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hgwdUamFN5"}],"identifier":"import","label":"Import","html_id":"import","implicit":true,"key":"VetcwVaS8h"}],"key":"qGGUoPXSxN"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Lasso Simulation Data\n\n# import dask\nfrom datetime import datetime\nfrom distributed import Client\nimport numpy as np\nimport xarray as xr\nimport xwrf\nimport s3fs\nimport fsspec\nimport xarray as xr\nimport glob\n\nimport matplotlib.pyplot as plt","key":"NPPEcPHYGH"},{"type":"output","id":"naDPEx01-c6CsavWcEhtj","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/xwrf/__init__.py:5: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.\n  from pkg_resources import DistributionNotFound, get_distribution\n"}],"key":"uo9woObcoq"}],"key":"Bp4d9wwL4j"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Spin up a Dask Cluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"H84NKUByTn"}],"identifier":"spin-up-a-dask-cluster","label":"Spin up a Dask Cluster","html_id":"spin-up-a-dask-cluster","implicit":true,"key":"ZF17Dx8H6T"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We will use Dask here to access the data in a parallel/distributed manner.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"a3SC0cOtuM"}],"key":"pW2o9l8SuP"}],"key":"R4pvVqU44R"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"client = Client()\nclient","key":"uuPzSv8dz1"},{"type":"output","id":"8M8XjiyBxN1DNPKvAlH__","data":[{"output_type":"execute_result","execution_count":2,"metadata":{},"data":{"text/plain":{"content":"<Client: 'tcp://127.0.0.1:37129' processes=4 threads=4, memory=15.62 GiB>","content_type":"text/plain"},"text/html":{"content":"<div>\n    <div style=\"width: 24px; height: 24px; background-color: #e1e1e1; border: 3px solid #9D9D9D; border-radius: 5px; position: absolute;\"> </div>\n    <div style=\"margin-left: 48px;\">\n        <h3 style=\"margin-bottom: 0px;\">Client</h3>\n        <p style=\"color: #9D9D9D; margin-bottom: 0px;\">Client-1acd34bb-4bc2-11f0-8ead-7c1e528690c7</p>\n        <table style=\"width: 100%; text-align: left;\">\n\n        <tr>\n        \n            <td style=\"text-align: left;\"><strong>Connection method:</strong> Cluster object</td>\n            <td style=\"text-align: left;\"><strong>Cluster type:</strong> distributed.LocalCluster</td>\n        \n        </tr>\n\n        \n            <tr>\n                <td style=\"text-align: left;\">\n                    <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:8787/status\" target=\"_blank\">http://127.0.0.1:8787/status</a>\n                </td>\n                <td style=\"text-align: left;\"></td>\n            </tr>\n        \n\n        </table>\n\n        \n\n        \n            <details>\n            <summary style=\"margin-bottom: 20px;\"><h3 style=\"display: inline;\">Cluster Info</h3></summary>\n            <div class=\"jp-RenderedHTMLCommon jp-RenderedHTML jp-mod-trusted jp-OutputArea-output\">\n    <div style=\"width: 24px; height: 24px; background-color: #e1e1e1; border: 3px solid #9D9D9D; border-radius: 5px; position: absolute;\">\n    </div>\n    <div style=\"margin-left: 48px;\">\n        <h3 style=\"margin-bottom: 0px; margin-top: 0px;\">LocalCluster</h3>\n        <p style=\"color: #9D9D9D; margin-bottom: 0px;\">5c0ef547</p>\n        <table style=\"width: 100%; text-align: left;\">\n            <tr>\n                <td style=\"text-align: left;\">\n                    <strong>Dashboard:</strong> <a href=\"http://127.0.0.1:8787/status\" target=\"_blank\">http://127.0.0.1:8787/status</a>\n                </td>\n                <td style=\"text-align: left;\">\n                    <strong>Workers:</strong> 4\n                </td>\n            </tr>\n            <tr>\n                <td style=\"text-align: left;\">\n                    <strong>Total threads:</strong> 4\n                </td>\n                <td style=\"text-align: left;\">\n                    <strong>Total memory:</strong> 15.62 GiB\n                </td>\n            </tr>\n            \n            <tr>\n    <td style=\"text-align: left;\"><strong>Status:</strong> running</td>\n    <td style=\"text-align: left;\"><strong>Using processes:</strong> True</td>\n</tr>\n\n            \n        </table>\n\n        <details>\n            <summary style=\"margin-bottom: 20px;\">\n                <h3 style=\"display: inline;\">Scheduler Info</h3>\n            </summary>\n\n            <div style=\"\">\n    <div>\n        <div style=\"width: 24px; height: 24px; background-color: #FFF7E5; border: 3px solid #FF6132; border-radius: 5px; position: absolute;\"> </div>\n        <div style=\"margin-left: 48px;\">\n            <h3 style=\"margin-bottom: 0px;\">Scheduler</h3>\n            <p style=\"color: #9D9D9D; margin-bottom: 0px;\">Scheduler-997faabd-440c-482e-933a-de4814f44884</p>\n            <table style=\"width: 100%; text-align: left;\">\n                <tr>\n                    <td style=\"text-align: left;\">\n                        <strong>Comm:</strong> tcp://127.0.0.1:37129\n                    </td>\n                    <td style=\"text-align: left;\">\n                        <strong>Workers:</strong> 0 \n                    </td>\n                </tr>\n                <tr>\n                    <td style=\"text-align: left;\">\n                        <strong>Dashboard:</strong> <a href=\"http://127.0.0.1:8787/status\" target=\"_blank\">http://127.0.0.1:8787/status</a>\n                    </td>\n                    <td style=\"text-align: left;\">\n                        <strong>Total threads:</strong> 0\n                    </td>\n                </tr>\n                <tr>\n                    <td style=\"text-align: left;\">\n                        <strong>Started:</strong> Just now\n                    </td>\n                    <td style=\"text-align: left;\">\n                        <strong>Total memory:</strong> 0 B\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n\n    <details style=\"margin-left: 48px;\">\n        <summary style=\"margin-bottom: 20px;\">\n            <h3 style=\"display: inline;\">Workers</h3>\n        </summary>\n\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 0</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:46351\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:33801/status\" target=\"_blank\">http://127.0.0.1:33801/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:34889\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-nco_c5bn\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 1</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:36639\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:43665/status\" target=\"_blank\">http://127.0.0.1:43665/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:42703\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-fa6gx5lc\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 2</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:40667\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:40427/status\" target=\"_blank\">http://127.0.0.1:40427/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:43105\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-bsf0hxqg\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 3</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:45979\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:33139/status\" target=\"_blank\">http://127.0.0.1:33139/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 3.91 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:41835\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-oxl3se5h\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n\n    </details>\n</div>\n\n        </details>\n    </div>\n</div>\n            </details>\n        \n\n    </div>\n</div>","content_type":"text/html"}}}],"key":"vnrhLamz0c"}],"key":"W8zdBIbg20"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Access LASSO SGP Data from the NSF Jetstream Cloud","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Y4B6kdCNs9"}],"identifier":"access-lasso-sgp-data-from-the-nsf-jetstream-cloud","label":"Access LASSO SGP Data from the NSF Jetstream Cloud","html_id":"access-lasso-sgp-data-from-the-nsf-jetstream-cloud","implicit":true,"key":"OEnjEaaSva"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"A subset of the LASSO Shallow Cumulus Experiment over the Southern Great Plains site has been made available on a cloud bucket, hosted through Project Pythia. These datasets were originally accessed through the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"udzvuGMY48"},{"type":"link","url":"https://adc.arm.gov/lassobrowser","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"LASSO bundle browser","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"f9AgDJsgzh"}],"urlSource":"https://adc.arm.gov/lassobrowser","key":"fhLs8nUrNI"},{"type":"text","value":", untarred, then uploaded to the cloud bucket. We focus exclusively on the April 4, 2019 case.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"cBNm9K5STU"}],"key":"VIPSHKNvMK"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Data were obtained from the Atmospheric Radiation Measurement (ARM) Program sponsored by the U.S. Department of Energy, Office of Science, Office of Biological and Environmental Research, Climate and Environmental Sciences Division.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"HLZMIsBKLT"}],"key":"vNGfudJZYs"}],"key":"hSg7YIfx8j"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Set the URL to access the data","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yX2dA3TZdR"}],"identifier":"set-the-url-to-access-the-data","label":"Set the URL to access the data","html_id":"set-the-url-to-access-the-data","implicit":true,"key":"EMdSnBiLRD"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The data are stored on a bucket, which is a web-accessible place where we can remotely ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"HQgZNe7u4X"},{"type":"strong","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"stream","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Xyy8NkGUVr"}],"key":"mqM21uxMGi"},{"type":"text","value":" the data, without downloading directly. The bucket is located on the NSF jetstream cloud, which we can see below. We then use ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"guJVUuHiug"},{"type":"inlineCode","value":"fsspec","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"XhLhLvicMz"},{"type":"text","value":" to easily list the directrories and load in the data.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"bSwutfSRiY"}],"key":"RyPH2DPid1"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Below we set the url, then list (glob) the directories in the bucket.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"n00XXh49vQ"}],"key":"qsUY1fFU9x"}],"key":"BVKxI5nZm3"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Set the URL and path for the cloud\nURL = 'https://js2.jetstream-cloud.org:8001/'\npath = f'pythia/lasso-sgp'\n\n\nfs = fsspec.filesystem(\"s3\", anon=True, client_kwargs=dict(endpoint_url=URL))\n\nfs.glob(f\"{path}/*\")","key":"lillYsticl"},{"type":"output","id":"FKn2KXJ6XeDg7_ZgKSQsq","data":[{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/plain":{"content":"['pythia/lasso-sgp/high_res_obs',\n 'pythia/lasso-sgp/metrics',\n 'pythia/lasso-sgp/sim0001',\n 'pythia/lasso-sgp/sim0002',\n 'pythia/lasso-sgp/sim0003',\n 'pythia/lasso-sgp/sim0004',\n 'pythia/lasso-sgp/sim0005',\n 'pythia/lasso-sgp/sim0006',\n 'pythia/lasso-sgp/sim0007',\n 'pythia/lasso-sgp/sim0008']","content_type":"text/plain"}}}],"key":"vlKKRhGnqQ"}],"key":"LJVj0qg4rh"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We notice that there are 8 simulations, as well as observations in the bucket. We are going to start with the fourth simulation, setting a path to the actual output, which is under ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YrlGUbR9s7"},{"type":"inlineCode","value":"/raw_model/","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DUR2rDZnW3"}],"key":"R6hYVs1XeH"}],"key":"mfZFLP7SzI"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"case_date = datetime(2019, 4, 4)\nsim_id = 4\n\n# Read the wrfstat files\nwrfstat_pattern = f's3://{path}/sim000{sim_id}/raw_model/wrfstat*'\n\n# Read the wrfout files\nwrfout_pattern = f's3://{path}/sim000{sim_id}/raw_model/wrfout*'\n\nwrfstat_files = sorted(fs.glob(wrfstat_pattern))\nwrfout_files = sorted(fs.glob(wrfout_pattern))","key":"Z0qK7YgM8P"},{"type":"output","id":"bL13C9yjTgBSAi4sZX1KE","data":[],"key":"FfozJaOKAX"}],"key":"J0cK4BdjpF"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Now that we have lists of files, we setup a path to read into xarray since we need the bucket information as well.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zHDKOPoexk"}],"key":"C5RZWoTZD0"}],"key":"PR4MrpdldV"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"wrfstat_file_list = [fs.open(file) for file in wrfstat_files]\nwrfout_file_list = [fs.open(file) for file in wrfout_files]","key":"HOQRoZetw1"},{"type":"output","id":"-SWa67xmO6CUVfVeNlCKZ","data":[],"key":"sNOWKkL6ed"}],"key":"zl1HXbWmoW"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Load Data Using Xarray and View Variables","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"M0zefcLKjh"}],"identifier":"load-data-using-xarray-and-view-variables","label":"Load Data Using Xarray and View Variables","html_id":"load-data-using-xarray-and-view-variables","implicit":true,"key":"qTZwbOfBN7"}],"key":"rnWTZpQjDR"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We have a single WRF stat file, which we can load into xarray, then postprocess with xwrf.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XizRH4hgfR"}],"key":"BZHfYH9EVr"}],"key":"UnZe7ePcMF"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds_stat = xr.open_mfdataset(wrfstat_file_list, engine='h5netcdf').xwrf.postprocess()\nds_stat","key":"sgJmOMI2sI"},{"type":"output","id":"GR5NZpeP71BxhFW01018C","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mClientError\u001b[39m                               Traceback (most recent call last)\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/s3fs/core.py:114\u001b[39m, in \u001b[36m_error_wrapper\u001b[39m\u001b[34m(func, args, kwargs, retries)\u001b[39m\n\u001b[32m    113\u001b[39m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m114\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mawait\u001b[39;00m func(*args, **kwargs)\n\u001b[32m    115\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m S3_RETRYABLE_ERRORS \u001b[38;5;28;01mas\u001b[39;00m e:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/aiobotocore/context.py:36\u001b[39m, in \u001b[36mwith_current_context.<locals>.decorator.<locals>.wrapper\u001b[39m\u001b[34m(*args, **kwargs)\u001b[39m\n\u001b[32m     35\u001b[39m     \u001b[38;5;28;01mawait\u001b[39;00m resolve_awaitable(hook())\n\u001b[32m---> \u001b[39m\u001b[32m36\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mawait\u001b[39;00m func(*args, **kwargs)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/aiobotocore/client.py:415\u001b[39m, in \u001b[36mAioBaseClient._make_api_call\u001b[39m\u001b[34m(self, operation_name, api_params)\u001b[39m\n\u001b[32m    414\u001b[39m     error_class = \u001b[38;5;28mself\u001b[39m.exceptions.from_code(error_code)\n\u001b[32m--> \u001b[39m\u001b[32m415\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m error_class(parsed_response, operation_name)\n\u001b[32m    416\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\n\u001b[31mClientError\u001b[39m: An error occurred (PreconditionFailed) when calling the GetObject operation: None\n\nThe above exception was the direct cause of the following exception:\n\n\u001b[31mOSError\u001b[39m                                   Traceback (most recent call last)\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/s3fs/core.py:2378\u001b[39m, in \u001b[36mS3File._fetch_range\u001b[39m\u001b[34m(self, start, end)\u001b[39m\n\u001b[32m   2377\u001b[39m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m-> \u001b[39m\u001b[32m2378\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43m_fetch_range\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m   2379\u001b[39m \u001b[43m        \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mfs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   2380\u001b[39m \u001b[43m        \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mbucket\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   2381\u001b[39m \u001b[43m        \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   2382\u001b[39m \u001b[43m        \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mversion_id\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   2383\u001b[39m \u001b[43m        \u001b[49m\u001b[43mstart\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   2384\u001b[39m \u001b[43m        \u001b[49m\u001b[43mend\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   2385\u001b[39m \u001b[43m        \u001b[49m\u001b[43mreq_kw\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mreq_kw\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   2386\u001b[39m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   2388\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mOSError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m ex:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/s3fs/core.py:2550\u001b[39m, in \u001b[36m_fetch_range\u001b[39m\u001b[34m(fs, bucket, key, version_id, start, end, req_kw)\u001b[39m\n\u001b[32m   2549\u001b[39m logger.debug(\u001b[33m\"\u001b[39m\u001b[33mFetch: \u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[33m/\u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[33m, \u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[33m-\u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[33m\"\u001b[39m, bucket, key, start, end)\n\u001b[32m-> \u001b[39m\u001b[32m2550\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43msync\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfs\u001b[49m\u001b[43m.\u001b[49m\u001b[43mloop\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m_inner_fetch\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mbucket\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mkey\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mversion_id\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mstart\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mend\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mreq_kw\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/fsspec/asyn.py:103\u001b[39m, in \u001b[36msync\u001b[39m\u001b[34m(loop, func, timeout, *args, **kwargs)\u001b[39m\n\u001b[32m    102\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(return_result, \u001b[38;5;167;01mBaseException\u001b[39;00m):\n\u001b[32m--> \u001b[39m\u001b[32m103\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m return_result\n\u001b[32m    104\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/fsspec/asyn.py:56\u001b[39m, in \u001b[36m_runner\u001b[39m\u001b[34m(event, coro, result, timeout)\u001b[39m\n\u001b[32m     55\u001b[39m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m---> \u001b[39m\u001b[32m56\u001b[39m     result[\u001b[32m0\u001b[39m] = \u001b[38;5;28;01mawait\u001b[39;00m coro\n\u001b[32m     57\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m ex:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/s3fs/core.py:2568\u001b[39m, in \u001b[36m_inner_fetch\u001b[39m\u001b[34m(fs, bucket, key, version_id, start, end, req_kw)\u001b[39m\n\u001b[32m   2566\u001b[39m         resp[\u001b[33m\"\u001b[39m\u001b[33mBody\u001b[39m\u001b[33m\"\u001b[39m].close()\n\u001b[32m-> \u001b[39m\u001b[32m2568\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mawait\u001b[39;00m _error_wrapper(_call_and_read, retries=fs.retries)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/s3fs/core.py:146\u001b[39m, in \u001b[36m_error_wrapper\u001b[39m\u001b[34m(func, args, kwargs, retries)\u001b[39m\n\u001b[32m    145\u001b[39m err = translate_boto_error(err)\n\u001b[32m--> \u001b[39m\u001b[32m146\u001b[39m \u001b[38;5;28;01mraise\u001b[39;00m err\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/s3fs/core.py:114\u001b[39m, in \u001b[36m_error_wrapper\u001b[39m\u001b[34m(func, args, kwargs, retries)\u001b[39m\n\u001b[32m    113\u001b[39m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m114\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mawait\u001b[39;00m func(*args, **kwargs)\n\u001b[32m    115\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m S3_RETRYABLE_ERRORS \u001b[38;5;28;01mas\u001b[39;00m e:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/s3fs/core.py:2555\u001b[39m, in \u001b[36m_inner_fetch.<locals>._call_and_read\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m   2554\u001b[39m \u001b[38;5;28;01masync\u001b[39;00m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34m_call_and_read\u001b[39m():\n\u001b[32m-> \u001b[39m\u001b[32m2555\u001b[39m     resp = \u001b[38;5;28;01mawait\u001b[39;00m fs._call_s3(\n\u001b[32m   2556\u001b[39m         \u001b[33m\"\u001b[39m\u001b[33mget_object\u001b[39m\u001b[33m\"\u001b[39m,\n\u001b[32m   2557\u001b[39m         Bucket=bucket,\n\u001b[32m   2558\u001b[39m         Key=key,\n\u001b[32m   2559\u001b[39m         Range=\u001b[33m\"\u001b[39m\u001b[33mbytes=\u001b[39m\u001b[38;5;132;01m%i\u001b[39;00m\u001b[33m-\u001b[39m\u001b[38;5;132;01m%i\u001b[39;00m\u001b[33m\"\u001b[39m % (start, end - \u001b[32m1\u001b[39m),\n\u001b[32m   2560\u001b[39m         **version_id_kw(version_id),\n\u001b[32m   2561\u001b[39m         **req_kw,\n\u001b[32m   2562\u001b[39m     )\n\u001b[32m   2563\u001b[39m     \u001b[38;5;28;01mtry\u001b[39;00m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/s3fs/core.py:371\u001b[39m, in \u001b[36mS3FileSystem._call_s3\u001b[39m\u001b[34m(self, method, *akwarglist, **kwargs)\u001b[39m\n\u001b[32m    370\u001b[39m additional_kwargs = \u001b[38;5;28mself\u001b[39m._get_s3_method_kwargs(method, *akwarglist, **kwargs)\n\u001b[32m--> \u001b[39m\u001b[32m371\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mawait\u001b[39;00m _error_wrapper(\n\u001b[32m    372\u001b[39m     method, kwargs=additional_kwargs, retries=\u001b[38;5;28mself\u001b[39m.retries\n\u001b[32m    373\u001b[39m )\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/s3fs/core.py:146\u001b[39m, in \u001b[36m_error_wrapper\u001b[39m\u001b[34m(func, args, kwargs, retries)\u001b[39m\n\u001b[32m    145\u001b[39m err = translate_boto_error(err)\n\u001b[32m--> \u001b[39m\u001b[32m146\u001b[39m \u001b[38;5;28;01mraise\u001b[39;00m err\n\n\u001b[31mOSError\u001b[39m: [Errno 22] None\n\nDuring handling of the above exception, another exception occurred:\n\n\u001b[31mTypeError\u001b[39m                                 Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[6]\u001b[39m\u001b[32m, line 1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m ds_stat = \u001b[43mxr\u001b[49m\u001b[43m.\u001b[49m\u001b[43mopen_mfdataset\u001b[49m\u001b[43m(\u001b[49m\u001b[43mwrfstat_file_list\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mengine\u001b[49m\u001b[43m=\u001b[49m\u001b[33;43m'\u001b[39;49m\u001b[33;43mh5netcdf\u001b[39;49m\u001b[33;43m'\u001b[39;49m\u001b[43m)\u001b[49m.xwrf.postprocess()\n\u001b[32m      2\u001b[39m ds_stat\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/xarray/backends/api.py:1635\u001b[39m, in \u001b[36mopen_mfdataset\u001b[39m\u001b[34m(paths, chunks, concat_dim, compat, preprocess, engine, data_vars, coords, combine, parallel, join, attrs_file, combine_attrs, **kwargs)\u001b[39m\n\u001b[32m   1632\u001b[39m     open_ = open_dataset\n\u001b[32m   1633\u001b[39m     getattr_ = \u001b[38;5;28mgetattr\u001b[39m\n\u001b[32m-> \u001b[39m\u001b[32m1635\u001b[39m datasets = [\u001b[43mopen_\u001b[49m\u001b[43m(\u001b[49m\u001b[43mp\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mopen_kwargs\u001b[49m\u001b[43m)\u001b[49m \u001b[38;5;28;01mfor\u001b[39;00m p \u001b[38;5;129;01min\u001b[39;00m paths1d]\n\u001b[32m   1636\u001b[39m closers = [getattr_(ds, \u001b[33m\"\u001b[39m\u001b[33m_close\u001b[39m\u001b[33m\"\u001b[39m) \u001b[38;5;28;01mfor\u001b[39;00m ds \u001b[38;5;129;01min\u001b[39;00m datasets]\n\u001b[32m   1637\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m preprocess \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/xarray/backends/api.py:687\u001b[39m, in \u001b[36mopen_dataset\u001b[39m\u001b[34m(filename_or_obj, engine, chunks, cache, decode_cf, mask_and_scale, decode_times, decode_timedelta, use_cftime, concat_characters, decode_coords, drop_variables, inline_array, chunked_array_type, from_array_kwargs, backend_kwargs, **kwargs)\u001b[39m\n\u001b[32m    675\u001b[39m decoders = _resolve_decoders_kwargs(\n\u001b[32m    676\u001b[39m     decode_cf,\n\u001b[32m    677\u001b[39m     open_backend_dataset_parameters=backend.open_dataset_parameters,\n\u001b[32m   (...)\u001b[39m\u001b[32m    683\u001b[39m     decode_coords=decode_coords,\n\u001b[32m    684\u001b[39m )\n\u001b[32m    686\u001b[39m overwrite_encoded_chunks = kwargs.pop(\u001b[33m\"\u001b[39m\u001b[33moverwrite_encoded_chunks\u001b[39m\u001b[33m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m)\n\u001b[32m--> \u001b[39m\u001b[32m687\u001b[39m backend_ds = \u001b[43mbackend\u001b[49m\u001b[43m.\u001b[49m\u001b[43mopen_dataset\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m    688\u001b[39m \u001b[43m    \u001b[49m\u001b[43mfilename_or_obj\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    689\u001b[39m \u001b[43m    \u001b[49m\u001b[43mdrop_variables\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdrop_variables\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    690\u001b[39m \u001b[43m    \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mdecoders\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    691\u001b[39m \u001b[43m    \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    692\u001b[39m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    693\u001b[39m ds = _dataset_from_backend_dataset(\n\u001b[32m    694\u001b[39m     backend_ds,\n\u001b[32m    695\u001b[39m     filename_or_obj,\n\u001b[32m   (...)\u001b[39m\u001b[32m    705\u001b[39m     **kwargs,\n\u001b[32m    706\u001b[39m )\n\u001b[32m    707\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m ds\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/xarray/backends/h5netcdf_.py:458\u001b[39m, in \u001b[36mH5netcdfBackendEntrypoint.open_dataset\u001b[39m\u001b[34m(self, filename_or_obj, mask_and_scale, decode_times, concat_characters, decode_coords, drop_variables, use_cftime, decode_timedelta, format, group, lock, invalid_netcdf, phony_dims, decode_vlen_strings, driver, driver_kwds, storage_options)\u001b[39m\n\u001b[32m    455\u001b[39m emit_phony_dims_warning, phony_dims = _check_phony_dims(phony_dims)\n\u001b[32m    457\u001b[39m filename_or_obj = _normalize_path(filename_or_obj)\n\u001b[32m--> \u001b[39m\u001b[32m458\u001b[39m store = \u001b[43mH5NetCDFStore\u001b[49m\u001b[43m.\u001b[49m\u001b[43mopen\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m    459\u001b[39m \u001b[43m    \u001b[49m\u001b[43mfilename_or_obj\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    460\u001b[39m \u001b[43m    \u001b[49m\u001b[38;5;28;43mformat\u001b[39;49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mformat\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[32m    461\u001b[39m \u001b[43m    \u001b[49m\u001b[43mgroup\u001b[49m\u001b[43m=\u001b[49m\u001b[43mgroup\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    462\u001b[39m \u001b[43m    \u001b[49m\u001b[43mlock\u001b[49m\u001b[43m=\u001b[49m\u001b[43mlock\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    463\u001b[39m \u001b[43m    \u001b[49m\u001b[43minvalid_netcdf\u001b[49m\u001b[43m=\u001b[49m\u001b[43minvalid_netcdf\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    464\u001b[39m \u001b[43m    \u001b[49m\u001b[43mphony_dims\u001b[49m\u001b[43m=\u001b[49m\u001b[43mphony_dims\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    465\u001b[39m \u001b[43m    \u001b[49m\u001b[43mdecode_vlen_strings\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdecode_vlen_strings\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    466\u001b[39m \u001b[43m    \u001b[49m\u001b[43mdriver\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdriver\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    467\u001b[39m \u001b[43m    \u001b[49m\u001b[43mdriver_kwds\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdriver_kwds\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    468\u001b[39m \u001b[43m    \u001b[49m\u001b[43mstorage_options\u001b[49m\u001b[43m=\u001b[49m\u001b[43mstorage_options\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    469\u001b[39m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    471\u001b[39m store_entrypoint = StoreBackendEntrypoint()\n\u001b[32m    473\u001b[39m ds = store_entrypoint.open_dataset(\n\u001b[32m    474\u001b[39m     store,\n\u001b[32m    475\u001b[39m     mask_and_scale=mask_and_scale,\n\u001b[32m   (...)\u001b[39m\u001b[32m    481\u001b[39m     decode_timedelta=decode_timedelta,\n\u001b[32m    482\u001b[39m )\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/xarray/backends/h5netcdf_.py:167\u001b[39m, in \u001b[36mH5NetCDFStore.open\u001b[39m\u001b[34m(cls, filename, mode, format, group, lock, autoclose, invalid_netcdf, phony_dims, decode_vlen_strings, driver, driver_kwds, storage_options)\u001b[39m\n\u001b[32m    162\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[32m    163\u001b[39m         \u001b[33m\"\u001b[39m\u001b[33mcan\u001b[39m\u001b[33m'\u001b[39m\u001b[33mt open netCDF4/HDF5 as bytes \u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m    164\u001b[39m         \u001b[33m\"\u001b[39m\u001b[33mtry passing a path or file-like object\u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m    165\u001b[39m     )\n\u001b[32m    166\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(filename, io.IOBase):\n\u001b[32m--> \u001b[39m\u001b[32m167\u001b[39m     magic_number = \u001b[43mread_magic_number_from_file\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfilename\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    168\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m magic_number.startswith(\u001b[33mb\u001b[39m\u001b[33m\"\u001b[39m\u001b[38;5;130;01m\\211\u001b[39;00m\u001b[33mHDF\u001b[39m\u001b[38;5;130;01m\\r\u001b[39;00m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;130;01m\\032\u001b[39;00m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[33m\"\u001b[39m):\n\u001b[32m    169\u001b[39m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[32m    170\u001b[39m             \u001b[33mf\u001b[39m\u001b[33m\"\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mmagic_number\u001b[38;5;132;01m!r}\u001b[39;00m\u001b[33m is not the signature of a valid netCDF4 file\u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m    171\u001b[39m         )\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/xarray/core/utils.py:688\u001b[39m, in \u001b[36mread_magic_number_from_file\u001b[39m\u001b[34m(filename_or_obj, count)\u001b[39m\n\u001b[32m    686\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m filename_or_obj.tell() != \u001b[32m0\u001b[39m:\n\u001b[32m    687\u001b[39m         filename_or_obj.seek(\u001b[32m0\u001b[39m)\n\u001b[32m--> \u001b[39m\u001b[32m688\u001b[39m     magic_number = \u001b[43mfilename_or_obj\u001b[49m\u001b[43m.\u001b[49m\u001b[43mread\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcount\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    689\u001b[39m     filename_or_obj.seek(\u001b[32m0\u001b[39m)\n\u001b[32m    690\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/fsspec/spec.py:2111\u001b[39m, in \u001b[36mAbstractBufferedFile.read\u001b[39m\u001b[34m(self, length)\u001b[39m\n\u001b[32m   2108\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m length == \u001b[32m0\u001b[39m:\n\u001b[32m   2109\u001b[39m     \u001b[38;5;66;03m# don't even bother calling fetch\u001b[39;00m\n\u001b[32m   2110\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[33mb\u001b[39m\u001b[33m\"\u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m-> \u001b[39m\u001b[32m2111\u001b[39m out = \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mcache\u001b[49m\u001b[43m.\u001b[49m\u001b[43m_fetch\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mloc\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mloc\u001b[49m\u001b[43m \u001b[49m\u001b[43m+\u001b[49m\u001b[43m \u001b[49m\u001b[43mlength\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   2113\u001b[39m logger.debug(\n\u001b[32m   2114\u001b[39m     \u001b[33m\"\u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[33m read: \u001b[39m\u001b[38;5;132;01m%i\u001b[39;00m\u001b[33m - \u001b[39m\u001b[38;5;132;01m%i\u001b[39;00m\u001b[33m \u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[33m\"\u001b[39m,\n\u001b[32m   2115\u001b[39m     \u001b[38;5;28mself\u001b[39m,\n\u001b[32m   (...)\u001b[39m\u001b[32m   2118\u001b[39m     \u001b[38;5;28mself\u001b[39m.cache._log_stats(),\n\u001b[32m   2119\u001b[39m )\n\u001b[32m   2120\u001b[39m \u001b[38;5;28mself\u001b[39m.loc += \u001b[38;5;28mlen\u001b[39m(out)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/fsspec/caching.py:288\u001b[39m, in \u001b[36mReadAheadCache._fetch\u001b[39m\u001b[34m(self, start, end)\u001b[39m\n\u001b[32m    286\u001b[39m end = \u001b[38;5;28mmin\u001b[39m(\u001b[38;5;28mself\u001b[39m.size, end + \u001b[38;5;28mself\u001b[39m.blocksize)\n\u001b[32m    287\u001b[39m \u001b[38;5;28mself\u001b[39m.total_requested_bytes += end - start\n\u001b[32m--> \u001b[39m\u001b[32m288\u001b[39m \u001b[38;5;28mself\u001b[39m.cache = \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mfetcher\u001b[49m\u001b[43m(\u001b[49m\u001b[43mstart\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mend\u001b[49m\u001b[43m)\u001b[49m  \u001b[38;5;66;03m# new block replaces old\u001b[39;00m\n\u001b[32m    289\u001b[39m \u001b[38;5;28mself\u001b[39m.start = start\n\u001b[32m    290\u001b[39m \u001b[38;5;28mself\u001b[39m.end = \u001b[38;5;28mself\u001b[39m.start + \u001b[38;5;28mlen\u001b[39m(\u001b[38;5;28mself\u001b[39m.cache)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/lasso-those-clouds-cookbook-dev/lib/python3.13/site-packages/s3fs/core.py:2389\u001b[39m, in \u001b[36mS3File._fetch_range\u001b[39m\u001b[34m(self, start, end)\u001b[39m\n\u001b[32m   2378\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m _fetch_range(\n\u001b[32m   2379\u001b[39m         \u001b[38;5;28mself\u001b[39m.fs,\n\u001b[32m   2380\u001b[39m         \u001b[38;5;28mself\u001b[39m.bucket,\n\u001b[32m   (...)\u001b[39m\u001b[32m   2385\u001b[39m         req_kw=\u001b[38;5;28mself\u001b[39m.req_kw,\n\u001b[32m   2386\u001b[39m     )\n\u001b[32m   2388\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mOSError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m ex:\n\u001b[32m-> \u001b[39m\u001b[32m2389\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m ex.args[\u001b[32m0\u001b[39m] == errno.EINVAL \u001b[38;5;129;01mand\u001b[39;00m \u001b[33;43m\"\u001b[39;49m\u001b[33;43mpre-conditions\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;129;43;01min\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mex\u001b[49m\u001b[43m.\u001b[49m\u001b[43margs\u001b[49m\u001b[43m[\u001b[49m\u001b[32;43m1\u001b[39;49m\u001b[43m]\u001b[49m:\n\u001b[32m   2390\u001b[39m         \u001b[38;5;28;01mraise\u001b[39;00m FileExpired(\n\u001b[32m   2391\u001b[39m             filename=\u001b[38;5;28mself\u001b[39m.details[\u001b[33m\"\u001b[39m\u001b[33mname\u001b[39m\u001b[33m\"\u001b[39m], e_tag=\u001b[38;5;28mself\u001b[39m.details.get(\u001b[33m\"\u001b[39m\u001b[33mETag\u001b[39m\u001b[33m\"\u001b[39m)\n\u001b[32m   2392\u001b[39m         ) \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mex\u001b[39;00m\n\u001b[32m   2393\u001b[39m     \u001b[38;5;28;01melse\u001b[39;00m:\n\n\u001b[31mTypeError\u001b[39m: argument of type 'NoneType' is not iterable","ename":"TypeError","evalue":"argument of type 'NoneType' is not iterable"}],"key":"FT2z6rzHJ3"}],"key":"feimaV33LK"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Plotting wrfstat variables...\n\n# path_shcu_root = \"/gpfs/wolf2/arm/atm124/world-shared/arm-summer-school-2024/lasso_tutorial/ShCu/untar/\"  # on cumulus\npath_shcu_root = \"/data/project/ARM_Summer_School_2024_Data/lasso_tutorial/ShCu/untar\"  # on Jupyter\n\ncase_date = datetime(2019, 4, 4)\nsim_id = 4\n\nds_stat = xr.open_dataset(f\"{path_shcu_root}/{case_date:%Y%m%d}/sim{sim_id:04d}/raw_model/wrfstat_d01_{case_date:%Y-%m-%d_12:00:00}.nc\")\nds_stat","key":"DoUHgDUitj"},{"type":"output","id":"DjohnJjF6ocZnIGvKt8rv","data":[],"key":"WjMbQNFRZb"}],"key":"XcpEwi9Hst"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot Variables and Modify as Desired","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ee8BwdPjrH"}],"identifier":"plot-variables-and-modify-as-desired","label":"Plot Variables and Modify as Desired","html_id":"plot-variables-and-modify-as-desired","implicit":true,"key":"YBSTJvFoMA"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"xwrf automatically corrected the time for us! So now we can focus on subsetting given an hour. In this case, we are interested in ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IxyWeyyY4Y"},{"type":"inlineCode","value":"1700 UTC","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VC1sAvylvk"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"j9NtvaDjkQ"}],"key":"kwkJnSV6R4"}],"key":"R2c5NY8Hu4"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds_stat.CSV_LWC","key":"I1GxXYn5NT"},{"type":"output","id":"PNS8--41JaWd0TWH3jO5H","data":[],"key":"MMdpLxE14E"}],"key":"Fg0DnD0BOK"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"hour_to_plot = 17\n\n# Time series:\nds_stat[\"CST_LWP\"].plot()\nplt.show()\n\n# Profile at a selected time (plots sideways, though, since we are being lazy):\nds_stat[\"CSP_LWC\"].sel(Time=f\"{case_date:%Y-%m-%d} {hour_to_plot}:00\").plot()\nplt.show()\n\n# X-Y slice for a selected time:\nds_stat[\"CSS_LWP\"].sel(Time=f\"{case_date:%Y-%m-%d} {hour_to_plot}:00\").plot()\nplt.show()\n\n# A vertical slice from the volume at a selected time:\n# We'll assign the vertical coordinate values for this one and hide the cloud-free upper atmosphere.\nplot_data = ds_stat[\"CSV_LWC\"].assign_coords(height=(ds_stat[\"CSP_Z\"]))\nplot_data.sel(Time=f\"{case_date:%Y-%m-%d} {hour_to_plot}:00\", y=-12450).plot(y=\"height\", ylim=[0, 1500])\nplt.show()\n\n# Add lines and modify variables to plot desired figures... In this notebook, we plotted ","key":"y7LpOyxU3a"},{"type":"output","id":"calORwAfe4eOJ2AQAiVWX","data":[],"key":"bk8kxCSukk"}],"key":"ZLhTpZzbk4"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot wind speed","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"r3Nm0T3lnZ"}],"identifier":"plot-wind-speed","label":"Plot wind speed","html_id":"plot-wind-speed","implicit":true,"key":"DkMT7lBZgP"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Let’s start with the first 10 files from the WRF simulation.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"fXBa0Uyfmz"}],"key":"vhpn5mQDLf"}],"key":"hQVEtZh2gv"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Note the extra details required by open_mfdataset to connect the files together in time.\nds_wrf = xr.open_mfdataset(wrfout_file_list[:10],\n                           combine=\"nested\",\n                           concat_dim=\"Time\")","key":"MLxIS5YJz9"},{"type":"output","id":"WEeWTjtmQ9K6tjeHY6kbe","data":[],"key":"hN1BQF5EeD"}],"key":"nE0iLD8lYg"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Since we did not use xwrf, this time, let’s fix the times.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DY3ptlDN4l"}],"key":"QrE3RLOgQ3"}],"key":"xXh1FLiRbt"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds_wrf[\"Time\"] = ds_wrf[\"XTIME\"]","key":"GteoSwKniC"},{"type":"output","id":"4G_Q4tnm7OUN2_10tsskj","data":[],"key":"wHYoIV42Mi"}],"key":"I1oY9in3hI"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Visualize the Wind Vectors and Expose Destaggering","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SOKzhsSPVA"}],"identifier":"visualize-the-wind-vectors-and-expose-destaggering","label":"Visualize the Wind Vectors and Expose Destaggering","html_id":"visualize-the-wind-vectors-and-expose-destaggering","implicit":true,"key":"KukiemzYZb"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Next, we plot wind vectors at a selected level to demonstrate how to destagger the wind components to cell-center values with xarray. The destaggering is something that we can automatically handle with xwrf, but we explain the process below to be more transparent, especially with winds that are not in the cell-centers.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"MkWS1obCzp"}],"key":"zpWFV4w1xQ"},{"type":"heading","depth":4,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Destagger and Rename Dimensions","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Oajyfk4clG"}],"identifier":"destagger-and-rename-dimensions","label":"Destagger and Rename Dimensions","html_id":"destagger-and-rename-dimensions","implicit":true,"key":"L2kOYkrlfQ"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"We need to:","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"jqxGRumCx8"}],"key":"vwj6ltSc1F"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"destagger to cell centers","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"FZWpVdmUva"}],"key":"ohV04eGYHv"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"rename the staggered dimension back to the non-staggered name to avoid dimension conflicts","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"DmTOnhbqPI"}],"key":"uYQUr9wWkv"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"(re)name the unstaggered wind for convenience","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"MEInIcUwfU"}],"key":"O761h8acun"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Then, we are able to put these new DataArrays back into the ds_wrf Dataset.","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"BFJ903rH1K"}],"key":"QwUI3zH9lt"}],"key":"IXXgtU07kW"}],"key":"e8YIdONJ87"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Plot wind vectors at a selected level to demonstrate how to destagger the wind components to cell-center values with xarray...\n\nplot_level = 12  # index of level to plot\nskip_xy = 10  # Sampling interval for the vector thinning\n\nnt, nz, ny, nx = ds_wrf[\"T\"].shape\n\nds_wrf[\"UA\"] = 0.5*( ds_wrf[\"U\"].isel(west_east_stag=slice(0, nx)) + \n                    ds_wrf[\"U\"].shift(west_east_stag=-1).isel(west_east_stag=slice(0, nx)) ).\\\n                    rename(\"UA\").rename(west_east_stag=\"west_east\")\nds_wrf[\"VA\"] = 0.5*( ds_wrf[\"V\"].isel(south_north_stag=slice(0, ny)) + \n                    ds_wrf[\"V\"].shift(south_north_stag=-1).isel(south_north_stag=slice(0, ny)) ).\\\n                    rename(\"VA\").rename(south_north_stag=\"south_north\")\nds_wrf[\"SPD\"] = np.sqrt(ds_wrf[\"UA\"]**2 + ds_wrf[\"VA\"]**2).rename(\"wind speed\").\\\n                    assign_attrs(units=\"m s-1\", description=\"wind speed\")","key":"mLB21Fp3GI"},{"type":"output","id":"hnkXkDM5fzr6GEgmepCXG","data":[],"key":"kWn9RThQzV"}],"key":"oc9eO0y0GK"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Visualize the Speed and Wind Vectors","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fR3jgfzQVJ"}],"identifier":"visualize-the-speed-and-wind-vectors","label":"Visualize the Speed and Wind Vectors","html_id":"visualize-the-speed-and-wind-vectors","implicit":true,"key":"ZmMHAtCj8n"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Now, we can proceed to more plotting-specific data manipulation. We need to add spatial variables for the idealized domain (since XLAT and XLONG are constant in the file). This is needed by the xarray quiver routine.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ySMAGFulPY"}],"key":"VyZXWsp4yT"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Then, thin the grid to reduce the number of arrrows.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fQCTBgdN22"}],"key":"OvUtLcbAZ6"}],"key":"J0JutRXVbu"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds_wrf[\"west_east\"] = xr.DataArray(data=np.arange(nx)*ds_wrf.attrs[\"DX\"], dims=\"west_east\", name=\"west_east\", attrs={\"units\": \"m\"})\nds_wrf[\"south_north\"] = xr.DataArray(data=np.arange(ny)*ds_wrf.attrs[\"DX\"], dims=\"south_north\", name=\"south_north\", attrs={\"units\": \"m\"})\n\nds_wrf_thinned = ds_wrf.\\\n    isel(west_east=slice(0, nx, skip_xy), south_north=slice(0, ny, skip_xy), bottom_top=plot_level).\\\n    sel(Time=f\"{case_date:%Y-%m-%d} {hour_to_plot}:00\")\n\nfig, ax = plt.subplots(ncols=1)\nds_wrf_thinned[\"SPD\"].plot(ax=ax, x=\"west_east\", y=\"south_north\")\nds_wrf_thinned.plot.quiver(ax=ax, x=\"west_east\", y=\"south_north\", u=\"UA\", v=\"VA\",\n                           scale=100)\nplt.show()","key":"EVPILC78Fq"},{"type":"output","id":"epjt8Maw3R01mhw0oYU4o","data":[],"key":"X7VqZGJRtX"}],"key":"CSuQbn7lg5"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Compare with Observational Data from ARM","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Us3v955oBk"}],"identifier":"compare-with-observational-data-from-arm","label":"Compare with Observational Data from ARM","html_id":"compare-with-observational-data-from-arm","implicit":true,"key":"RNwIDqOLN0"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Now that we have plotted the simulation data from WRF, let’s take a look at the observations.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AcCvmF7xMV"}],"key":"wGzsfkBAvc"}],"key":"ZgbUoei7N8"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fs.glob(f\"{path}/*\")","key":"WgYJ1dQydS"},{"type":"output","id":"DDKp3i0XnhQhsHv2PJ28Q","data":[],"key":"P7Ef1WSRVl"}],"key":"Ve9HMpdl3I"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fs.glob('pythia/lasso-sgp/high_res_obs/sgp*')","key":"TQC15kH0x4"},{"type":"output","id":"X8nRInKCKQnCQ8Ze3z4NU","data":[],"key":"mjSR4tkgW3"}],"key":"NVzVHFNSs3"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Compare with ARM Observational Data\n\nimport os\n\nfrom arm_test_data import DATASETS\nimport matplotlib.pyplot as plt\n\nimport act\n\n# Place your username and token here\nusername = os.getenv('ARM_USERNAME')\ntoken = os.getenv('ARM_PASSWORD')\n\n# If the username and token are not set, use the existing sample file\nif username is None or token is None or len(username) == 0 or len(token) == 0:\n    filename_ceil = DATASETS.fetch('sgpceilC1.b1.20190101.000000.nc')\n    ceil_ds = act.io.arm.read_arm_netcdf(filename_ceil, engine='netcdf4')\nelse:\n    # Example to show how easy it is to download ARM data if a username/token are set\n    results = act.discovery.download_arm_data(\n        username, token, 'sgpceilC1.b1', '2022-01-14', '2022-01-19'\n    )\n    ceil_ds = act.io.arm.read_arm_netcdf(results)\n\n# Adjust ceilometer data for plotting\nceil_ds = act.corrections.ceil.correct_ceil(ceil_ds, -9999.0)\n\n# Plot up ceilometer backscatter using HomeyerRainbow CVD friendly colormap\n# The same could be done with keyword 'cmap='HomeyerRainbow'\ndisplay = act.plotting.TimeSeriesDisplay(ceil_ds, subplot_shape=(1,), figsize=(15, 5))\ndisplay.plot('backscatter', subplot_index=(0,), cvd_friendly=True)\nplt.show()","key":"kQKWoQesfl"},{"type":"output","id":"nmTs3ArfrEbBPpnbbcfgq","data":[],"key":"U0EsFheFHR"}],"key":"qPh7siM4Kb"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# ARM Plotting v2\nimport act\nimport numpy as np\nimport xarray as xr\nimport matplotlib.pyplot as plt","key":"S3zT2Bwkro"},{"type":"output","id":"QMzphbGqnBOmxoLWgCOv_","data":[],"key":"VRr1gKP9mv"}],"key":"RiQGUo9so8"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot Desired Variables","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BLvkRkpcUd"}],"identifier":"plot-desired-variables","label":"Plot Desired Variables","html_id":"plot-desired-variables","implicit":true,"key":"AR0kGdBwVZ"}],"key":"x5ndubqlas"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Set your username and token here!\nusername = '***'\ntoken = '***'\n\n# Set the datastream and start/enddates\ndatastream = 'sgpaosmetE13.a1'\nstartdate = '2019-04-04'\nenddate = '2019-04-05'\n\n# Use ACT to easily download the data.  Watch for the data citation!  Show some support\n# for ARM's instrument experts and cite their data if you use it in a publication\nresult = act.discovery.download_arm_data(username, token, datastream, startdate, enddate)","key":"cuSTj9GgZ4"},{"type":"output","id":"kEltTTwwJXXsyJQ16tgvm","data":[],"key":"dBJIg28IGI"}],"key":"khL1ASlzs2"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Let's read in the data using ACT and check out the data\nds_mpl = act.io.read_arm_netcdf(result)\n\nds_mpl","key":"n10M1z6Zgd"},{"type":"output","id":"O26Nj-Evy3qhKDxDfqiy8","data":[],"key":"d4bILaMGxR"}],"key":"a2ir50kgBV"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Change variable (as desired), Apply QC, and Plot Again","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pDMmTZsNRt"}],"identifier":"change-variable-as-desired-apply-qc-and-plot-again","label":"Change variable (as desired), Apply QC, and Plot Again","html_id":"change-variable-as-desired-apply-qc-and-plot-again","implicit":true,"key":"w28hqiYuHc"}],"key":"VtQFN1i5D5"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Let's take a look at the quality control information associated with a variable from the MPL\nvariable = 'temperature_ambient'\n\n# First, for many of the ACT QC features, we need to get the dataset more to CF standard and that\n# involves cleaning up some of the attributes and ways that ARM has historically handled QC\nds_mpl.clean.cleanup()\n\n# Apply corrections for the ceilometer, correcting for the vertical height\n#ds_mpl = act.corrections.ceil.correct_ceil(ds_mpl,-999.0)\n\n# Next, let's take a look at visualizing the quality control information\n# Create a plotting display object with 2 plots\ndisplay = act.plotting.TimeSeriesDisplay(ds_mpl, figsize=(10, 5), subplot_shape=(1,))\n\n# # Plot up the variable in the first plot\ndisplay.plot(variable, subplot_index=(0,))\n\n# # Plot up the QC variable in the second plot\n# #display.qc_flag_block_plot(variable, subplot_index=(1,))\n# plt.show()","key":"AlVdlqZaet"},{"type":"output","id":"Ci40SOFmwn-YHELWpYrp2","data":[],"key":"pAWjCf5IID"}],"key":"i8ItrmgpvG"}],"key":"RFKrwHO1rQ"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Project Pythia Cookbook Template","url":"/","group":"Project Pythia Cookbook Template"},"next":{"title":"Clouds over SGP for April 4, 2019","url":"/notebooks/calc-cloud-base-and-top","group":"LASSO Simulation April 4, 2019 - Cloud base and Top"}}},"domain":"http://localhost:3000"}